import { db } from "./db";
import { doctors, timeSlots } from "@shared/schema";

export async function seedDoctors() {
  try {
    console.log('๐ฅ ุจุฏุก ุฅุถุงูุฉ ุงูุฃุทุจุงุก ูุงูููุงุนูุฏ ุงููุชุงุญุฉ...');

    // Add sample doctors
    const sampleDoctors = [
      {
        name: 'ุฏ. ุฃุญูุฏ ูุญูุฏ',
        specialty: 'ุฌุฑุงุญุฉ ุชุฌููู ุงูุฃูู',
        experience: 15,
        rating: 4.9,
        bio: 'ุงุณุชุดุงุฑู ุฌุฑุงุญุฉ ุงูุชุฌููู ูุน ุฎุจุฑุฉ 15 ุนุงูุงู ูู ุฌุฑุงุญุงุช ุงูุฃูู ุงูุชุฌููููุฉ ูุงููุธูููุฉ',
        hourlyRate: 50000, // 500 ุฑูุงู
        isActive: true
      },
      {
        name: 'ุฏ. ูุงุทูุฉ ุงูุนูู',
        specialty: 'ุทุจ ุชุฌููู ุงููุฌู',
        experience: 12,
        rating: 4.8,
        bio: 'ุทุจูุจุฉ ุชุฌููู ูุชุฎุตุตุฉ ูู ุนูุงุฌุงุช ุงููุฌู ุบูุฑ ุงูุฌุฑุงุญูุฉ ูุงูููุฒุฑ',
        hourlyRate: 40000, // 400 ุฑูุงู
        isActive: true
      },
      {
        name: 'ุฏ. ุฎุงูุฏ ุงูุดูุฑู',
        specialty: 'ุชุฌููู ุงูุฃุณูุงู',
        experience: 10,
        rating: 4.7,
        bio: 'ุงุณุชุดุงุฑู ุชุฌููู ุงูุฃุณูุงู ูุชุฎุตุต ูู ุงูุชูููู ุงูุดูุงู ูุงูุงุจุชุณุงูุฉ ุงููููููุฏูุฉ',
        hourlyRate: 35000, // 350 ุฑูุงู
        isActive: true
      },
      {
        name: 'ุฏ. ุณุงุฑุฉ ุงูุญุฑุจู',
        specialty: 'ุงูุนูุงูุฉ ุจุงูุจุดุฑุฉ',
        experience: 8,
        rating: 4.6,
        bio: 'ุทุจูุจุฉ ุฌูุฏูุฉ ูุชุฎุตุตุฉ ูู ุนูุงุฌ ูุดุงูู ุงูุจุดุฑุฉ ูุงูุนูุงุฌุงุช ุงูุชุฌููููุฉ',
        hourlyRate: 30000, // 300 ุฑูุงู
        isActive: true
      },
      {
        name: 'ุฏ. ูุญูุฏ ุงููุญุทุงูู',
        specialty: 'ุฌุฑุงุญุฉ ุงููุฌู ูุงููููู',
        experience: 18,
        rating: 4.9,
        bio: 'ุงุณุชุดุงุฑู ุฌุฑุงุญุฉ ุงููุฌู ูุงููููู ูุน ุฎุจุฑุฉ ูุงุณุนุฉ ูู ุงูุนูููุงุช ุงูุชุฌููููุฉ ุงููุนูุฏุฉ',
        hourlyRate: 60000, // 600 ุฑูุงู
        isActive: true
      },
      {
        name: 'ุฏ. ููุฑุง ุงููุทูุฑู',
        specialty: 'ุทุจ ุชุฌููู ูุชูุงูู',
        experience: 14,
        rating: 4.8,
        bio: 'ุงุณุชุดุงุฑูุฉ ุทุจ ุชุฌููู ูุชูุงูู ูุชุฎุตุตุฉ ูู ุงูุนูุงุฌุงุช ุงูุฌุฑุงุญูุฉ ูุบูุฑ ุงูุฌุฑุงุญูุฉ',
        hourlyRate: 45000, // 450 ุฑูุงู
        isActive: true
      }
    ];

    // Insert doctors
    const insertedDoctors = await db.insert(doctors).values(sampleDoctors).returning();
    console.log(`โ ุชู ุฅุถุงูุฉ ${insertedDoctors.length} ุฃุทุจุงุก`);

    // Generate time slots for the next 30 days
    const timeSlots_data = [];
    const today = new Date();
    
    for (let dayOffset = 0; dayOffset < 30; dayOffset++) {
      const currentDate = new Date(today);
      currentDate.setDate(today.getDate() + dayOffset);
      const dateString = currentDate.toISOString().split('T')[0];
      
      // Skip weekends (Friday and Saturday in Saudi Arabia)
      const dayOfWeek = currentDate.getDay();
      if (dayOfWeek === 5 || dayOfWeek === 6) continue;
      
      for (const doctor of insertedDoctors) {
        // Morning slots: 9:00 AM to 12:00 PM
        const morningSlots = [
          { start: '09:00', end: '09:30' },
          { start: '09:30', end: '10:00' },
          { start: '10:00', end: '10:30' },
          { start: '10:30', end: '11:00' },
          { start: '11:00', end: '11:30' },
          { start: '11:30', end: '12:00' }
        ];
        
        // Evening slots: 4:00 PM to 8:00 PM
        const eveningSlots = [
          { start: '16:00', end: '16:30' },
          { start: '16:30', end: '17:00' },
          { start: '17:00', end: '17:30' },
          { start: '17:30', end: '18:00' },
          { start: '18:00', end: '18:30' },
          { start: '18:30', end: '19:00' },
          { start: '19:00', end: '19:30' },
          { start: '19:30', end: '20:00' }
        ];
        
        const allSlots = [...morningSlots, ...eveningSlots];
        
        for (const slot of allSlots) {
          timeSlots_data.push({
            doctorId: doctor.id,
            date: dateString,
            startTime: slot.start,
            endTime: slot.end,
            isAvailable: true
          });
        }
      }
    }

    // Insert time slots in batches
    const batchSize = 100;
    for (let i = 0; i < timeSlots_data.length; i += batchSize) {
      const batch = timeSlots_data.slice(i, i + batchSize);
      await db.insert(timeSlots).values(batch);
    }

    console.log(`โ ุชู ุฅุถุงูุฉ ${timeSlots_data.length} ููุนุฏ ูุชุงุญ`);
    console.log('๐ ุชู ุงูุงูุชูุงุก ูู ุฅุนุฏุงุฏ ูุธุงู ุงูุญุฌุฒ ุจูุฌุงุญ!');

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅุนุฏุงุฏ ุงูุจูุงูุงุช:', error);
  }
}

// Run seeding if this file is executed directly
if (import.meta.url === `file://${process.argv[1]}`) {
  seedDoctors().then(() => process.exit(0));
}