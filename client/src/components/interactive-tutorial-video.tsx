import { useState, useRef, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import { Badge } from "@/components/ui/badge";
import { 
  Play, 
  Pause, 
  RotateCcw, 
  Volume2, 
  VolumeX, 
  SkipForward, 
  SkipBack,
  Download,
  Settings,
  BookOpen,
  User,
  Camera,
  Wand2,
  Eye,
  CheckCircle,
  ArrowRight,
  PlayCircle
} from "lucide-react";

interface TutorialStep {
  id: string;
  title: string;
  description: string;
  duration: number;
  content: string;
  visual: string;
  tips: string[];
}

const tutorialSteps: TutorialStep[] = [
  {
    id: "intro",
    title: "ูุฑุญุจุงู ุจู ูู MedVision AI",
    description: "ููุตุฉ ุงูุชุตูุฑ ุงูุฌุฑุงุญู ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู ูููููููู ุงูุทุจููู",
    duration: 15,
    content: "ูุฑุญุจุงู ุจู ูู ููุตุฉ MedVision AIุ ุงูููุตุฉ ุงูุฑุงุฆุฏุฉ ูู ูุฌุงู ุงูุชุตูุฑ ุงูุฌุฑุงุญู ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู. ุชู ุชุตููู ูุฐู ุงูููุตุฉ ุฎุตูุตุงู ูููููููู ุงูุทุจููู ููุณุงุนุฏุชูู ูู ุนุฑุถ ุงููุชุงุฆุฌ ุงููุญุชููุฉ ููุนูููุงุช ุงูุฌุฑุงุญูุฉ ุนูู ุงููุฑุถู ุจุทุฑููุฉ ุขููุฉ ููุชูุงููุฉ ูุน ูุนุงููุฑ HIPAA.",
    visual: "๐ฅ",
    tips: [
      "ุงูููุตุฉ ูุชูุงููุฉ 100% ูุน ูุนุงููุฑ HIPAA",
      "ุฌููุน ุงูุจูุงูุงุช ูุดูุฑุฉ ุจุงููุงูู",
      "ุชูููุฉ ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูุทุจู ุงููุชูุฏูุฉ"
    ]
  },
  {
    id: "registration",
    title: "ุฅูุดุงุก ุญุณุงุจ ุฌุฏูุฏ",
    description: "ููููุฉ ุงูุชุณุฌูู ูุงูุงุดุชุฑุงู ูู ุงูููุตุฉ",
    duration: 20,
    content: "ููุจุฏุก ูู ุงุณุชุฎุฏุงู ุงูููุตุฉุ ุณุชุญุชุงุฌ ุฅูู ุฅูุดุงุก ุญุณุงุจ ุฌุฏูุฏ. ุงููุฑ ุนูู ุฒุฑ 'ุฅูุดุงุก ุญุณุงุจ ุฌุฏูุฏ' ูู ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ. ุฃุฏุฎู ุจูุงูุงุชู ุงูุทุจูุฉ ุงูููููุฉ ุจูุง ูู ุฐูู ุงูุงุณู ูุฑูู ุงูุชุฑุฎูุต ุงูุทุจู ูุงูุชุฎุตุต. ุจุนุฏ ุงูุชุญูู ูู ุจูุงูุงุชูุ ุณุชุชููู ูู ุงุฎุชูุงุฑ ุงูุงุดุชุฑุงู ุงูููุงุณุจ ูุงุญุชูุงุฌุงุชู.",
    visual: "๐จโโ๏ธ",
    tips: [
      "ุฃุฏุฎู ุฑูู ุงูุชุฑุฎูุต ุงูุทุจู ุงูุตุญูุญ ููุชุญูู",
      "ุงุฎุชุฑ ุงูุชุฎุตุต ุงูุทุจู ุงูููุงุณุจ",
      "ุชุฃูุฏ ูู ุตุญุฉ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ููุชูุนูู"
    ]
  },
  {
    id: "subscription",
    title: "ุงุฎุชูุงุฑ ุฎุทุฉ ุงูุงุดุชุฑุงู",
    description: "ุงูุฎุทุท ุงููุชุงุญุฉ ูููููุฉ ุงุฎุชูุงุฑ ุงูุฃูุณุจ",
    duration: 25,
    content: "ูููุฑ ุซูุงุซ ุฎุทุท ุงุดุชุฑุงู ูุตููุฉ ูุชูุจูุฉ ุงุญุชูุงุฌุงุช ูุฎุชูู ุงููููููู ุงูุทุจููู. ุงูุฎุทุฉ ุงูุฃุณุงุณูุฉ ููุงุณุจุฉ ููุฃุทุจุงุก ุงูุฌุฏุฏุ ุงูุฎุทุฉ ุงููุชูุฏูุฉ ููููุงุฑุณูู ุงููุนุชุงุฏููุ ูุงูุฎุทุฉ ุงูุงุญุชุฑุงููุฉ ููุนูุงุฏุงุช ูุงููุณุชุดููุงุช. ูู ุฎุทุฉ ุชุชุถูู ุนุฏุฏ ูุนูู ูู ุงูุชุตูุฑุงุช ุงูุดูุฑูุฉุ ุฏุนู ูููุ ูููุฒุงุช ูุชูุฏูุฉ ุญุณุจ ุงููุณุชูู.",
    visual: "๐ณ",
    tips: [
      "ุงูุฎุทุฉ ุงูุฃุณุงุณูุฉ: 50 ุชุตูุฑ ุดูุฑูุงู",
      "ุงูุฎุทุฉ ุงููุชูุฏูุฉ: 200 ุชุตูุฑ ุดูุฑูุงู",
      "ุงูุฎุทุฉ ุงูุงุญุชุฑุงููุฉ: ุชุตูุฑุงุช ุบูุฑ ูุญุฏูุฏุฉ"
    ]
  },
  {
    id: "camera-setup",
    title: "ุฅุนุฏุงุฏ ุงููุงููุฑุง ูุงูุชุตููุฑ",
    description: "ููููุฉ ุงูุชูุงุท ุตูุฑ ุนุงููุฉ ุงูุฌูุฏุฉ ูููุฑุถู",
    duration: 30,
    content: "ููุญุตูู ุนูู ุฃูุถู ุงููุชุงุฆุฌุ ูู ุงูููู ุงูุชูุงุท ุตูุฑ ุนุงููุฉ ุงูุฌูุฏุฉ. ุชุฃูุฏ ูู ูุฌูุฏ ุฅุถุงุกุฉ ุฌูุฏุฉ ููุชูุงุฒูุฉุ ุถุน ุงููุงููุฑุง ุนูู ูุณุชูู ูุฌู ุงููุฑูุถุ ูุงุญุฑุต ุนูู ุฃู ูููู ุงููุฌู ูู ููุชุตู ุงูุฅุทุงุฑ. ุชุฌูุจ ุงูุธูุงู ุงููููุฉ ูุงุณุชุฎุฏู ุฎูููุฉ ูุญุงูุฏุฉ. ููููู ุงุณุชุฎุฏุงู ุงููุงููุฑุง ุงููุฏูุฌุฉ ูู ุงูุฌูุงุฒ ุฃู ุฑูุน ุตูุฑุฉ ูู ุงูุฌูุงุฒ.",
    visual: "๐ธ",
    tips: [
      "ุงุณุชุฎุฏู ุฅุถุงุกุฉ ุทุจูุนูุฉ ุฃู LED ุจูุถุงุก",
      "ุชุฃูุฏ ูู ูุถูุญ ุชูุงุตูู ุงููุฌู",
      "ุชุฌูุจ ุงุณุชุฎุฏุงู ุงูููุงุด ุงููุจุงุดุฑ",
      "ุงุญุฑุต ุนูู ุงุณุชูุงูุฉ ุงูุฑุฃุณ ูุงููุธุฑ ููุฃูุงู"
    ]
  },
  {
    id: "procedure-selection",
    title: "ุงุฎุชูุงุฑ ููุน ุงูุนูููุฉ",
    description: "ููููุฉ ุชุญุฏูุฏ ููุน ุงูุฅุฌุฑุงุก ุงูุทุจู ุงููุทููุจ",
    duration: 20,
    content: "ุจุนุฏ ุงูุชูุงุท ุงูุตูุฑุฉุ ุณุชุฎุชุงุฑ ููุน ุงูุนูููุฉ ุงูุฌุฑุงุญูุฉ ูู ุงููุงุฆูุฉ ุงููุชุงุญุฉ. ุชุดูู ุงูุฎูุงุฑุงุช: ุนูููุงุช ุชุฌููู ุงูุฃููุ ุชุจููุถ ูุชูููู ุงูุฃุณูุงูุ ุดุฏ ุงููุฌู ููุญุช ุงูุฎุฏูุฏุ ูุฅุฒุงูุฉ ุงููุฏุจุงุช. ูู ููุน ูู ุฎูุงุฑุฒููุงุช ูุชุฎุตุตุฉ ูุฏุฑุจุฉ ุนูู ุขูุงู ุงูุญุงูุงุช ุงูุทุจูุฉ ุงูุญููููุฉ ูุถูุงู ุฏูุฉ ุงููุชุงุฆุฌ.",
    visual: "๐ง",
    tips: [
      "ุนูููุงุช ุงูุฃูู: ุชุดูู ุชุตุบูุฑุ ุชูุจูุฑุ ุชุนุฏูู ุงูุดูู",
      "ุงูุฃุณูุงู: ุชุจููุถุ ุชููููุ ุฒุฑุงุนุฉ",
      "ุดุฏ ุงููุฌู: ุฑูุน ุงูุฎุฏูุฏุ ุดุฏ ุงูุฌูุฏ",
      "ุงููุฏุจุงุช: ุชูููู ุงูุธููุฑุ ุชุญุณูู ุงููููุณ"
    ]
  },
  {
    id: "ai-generation",
    title: "ุชูููุฏ ุงูุตูุฑุฉ ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู",
    description: "ููููุฉ ุงุณุชุฎุฏุงู ููุฒุฉ ุงูุชููุน ุงูุฐูู",
    duration: 35,
    content: "ูุฐู ูู ุฃูู ููุฒุฉ ูู ุงูููุตุฉ. ุงููุฑ ุนูู ุฒุฑ 'ุชููุน ุงูุดูู ุจุนุฏ ุงูุนูููุฉ' ูุจุฏุก ุนูููุฉ ุงูุชุญููู ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู. ุณุชุณุชุบุฑู ุงูุนูููุฉ ุจูู 20-60 ุซุงููุฉ ุญุณุจ ุชุนููุฏ ุงูุฅุฌุฑุงุก. ุงููุธุงู ูุญูู ุจููุฉ ุงููุฌูุ ูุญุฏุฏ ุงูููุงุทู ุงูููุงุณุจุฉ ููุชุฏุฎูุ ููุทุจู ุงูุชุบููุฑุงุช ุงููุชููุนุฉ ุจูุงุกู ุนูู ุฎุจุฑุฉ ุขูุงู ุงูุญุงูุงุช ุงููุดุงุจูุฉ. ุงููุชูุฌุฉ ุตูุฑุฉ ูุงูุนูุฉ ุชุธูุฑ ุงูุดูู ุงููุชููุน ุจุนุฏ ุงูุนูููุฉ.",
    visual: "๐ค",
    tips: [
      "ุชุฃูุฏ ูู ุงุชุตุงู ุงูุฅูุชุฑูุช ูุจู ุงูุจุฏุก",
      "ูุง ุชุบูู ุงูุตูุญุฉ ุฃุซูุงุก ุงููุนุงูุฌุฉ",
      "ูููู ุถุจุท ุดุฏุฉ ุงูุชุฃุซูุฑ ูู 1-100",
      "ุงููุชุงุฆุฌ ุชุนุชูุฏ ุนูู ุฌูุฏุฉ ุงูุตูุฑุฉ ุงูุฃุตููุฉ"
    ]
  },
  {
    id: "area-selection",
    title: "ุชุญุฏูุฏ ุงูููุงุทู ุจุฏูุฉ",
    description: "ุงุณุชุฎุฏุงู ุฃุฏุงุฉ ุชุญุฏูุฏ ููุงุทู ุงููุฌู ุงููุชูุฏูุฉ",
    duration: 25,
    content: "ููุญุตูู ุนูู ูุชุงุฆุฌ ุฃูุซุฑ ุฏูุฉุ ููููู ุงุณุชุฎุฏุงู ุฃุฏุงุฉ ุชุญุฏูุฏ ุงูููุงุทู ุงููุชูุฏูุฉ. ูุฐู ุงูุฃุฏุงุฉ ุชุชูุญ ูู ุชุญุฏูุฏ ููุงุทู ูุนููุฉ ูู ุงููุฌู ููุชุฑููุฒ ุนูููุง ุฃุซูุงุก ุงููุนุงูุฌุฉ. ููููู ุฑุณู ููุงุทู ุญูู ุงูุฃููุ ุงูุดูุงูุ ุงูุฎุฏูุฏุ ุฃู ุงูุฐูู. ูููุง ูุงู ุงูุชุญุฏูุฏ ุฃูุซุฑ ุฏูุฉุ ูุงูุช ุงููุชุงุฆุฌ ุฃูุซุฑ ูุงูุนูุฉ ููุทุงุจูุฉ ูุชููุนุงุชู ุงูุทุจูุฉ.",
    visual: "๐ฏ",
    tips: [
      "ุงุณุชุฎุฏู ุญุฑูุงุช ุฏูููุฉ ุนูุฏ ุงูุชุญุฏูุฏ",
      "ูููู ุชุญุฏูุฏ ุนุฏุฉ ููุงุทู ูู ููุณ ุงูุตูุฑุฉ",
      "ุชุฃูุฏ ูู ุชุบุทูุฉ ูุงูู ุงูููุทูุฉ ุงููุทููุจุฉ",
      "ูููู ุฅุนุงุฏุฉ ุชุนุฏูู ุงูุชุญุฏูุฏ ูุจู ุงููุนุงูุฌุฉ"
    ]
  },
  {
    id: "makeup-studio",
    title: "ุงุณุชูุฏูู ุงููููุงุฌ ุงูุงูุชุฑุงุถู",
    description: "ุชุทุจูู ุงููููุงุฌ ุงูุฑููู ููุชุฌููู",
    duration: 30,
    content: "ููุฒุฉ ุฅุถุงููุฉ ูููุฏุฉ ููุชุฌููู ูุฅุธูุงุฑ ุงูุชุญุณููุงุช ุงูุจุณูุทุฉ. ููููู ุชุทุจูู ูููุงุฌ ุงูุชุฑุงุถู ููุดูุงูุ ุงูุนูููุ ุงูุฎุฏูุฏุ ููุงูู ุงููุฌู. ุงุฎุชุฑ ุงูุฃููุงู ุงูููุงุณุจุฉ ูู ุงูููุญุฉุ ูุญุฏุฏ ุดุฏุฉ ุงูุชุทุจููุ ุซู ุงููุฑ ุนูู ุงูููุทูุฉ ุงููุฑุงุฏ ุชุฌููููุง. ูุฐู ุงูููุฒุฉ ูููุฏุฉ ุฎุงุตุฉ ูุนุฑุถ ุงูุชุญุณููุงุช ุงูุชุฌููููุฉ ุงูุจุณูุทุฉ ุฃู ูุฅุธูุงุฑ ุงูุดูู ุงููุชููุน ูุน ุงููููุงุฌ ุจุนุฏ ุนูููุงุช ูุนููุฉ.",
    visual: "๐",
    tips: [
      "ุงุจุฏุฃ ุจุฃููุงู ุฎูููุฉ ุซู ุฒุฏ ุงูุดุฏุฉ ุชุฏุฑูุฌูุงู",
      "ุงุฎุชุฑ ุฃููุงู ุชูุงุณุจ ููู ุงูุจุดุฑุฉ",
      "ูููู ูุฒุฌ ุนุฏุฉ ุฃููุงู ููุญุตูู ุนูู ุงูุชุฃุซูุฑ ุงููุทููุจ",
      "ุงุณุชุฎุฏู ูุฑุดุฉ ูุงุนูุฉ ููุญุตูู ุนูู ูุธูุฑ ุทุจูุนู"
    ]
  },
  {
    id: "results-analysis",
    title: "ุชุญููู ุงููุชุงุฆุฌ ูุงูููุงุฑูุฉ",
    description: "ููููุฉ ุนุฑุถ ูููุงุฑูุฉ ุงูุตูุฑ ูุจู ูุจุนุฏ",
    duration: 20,
    content: "ุจุนุฏ ุฅูุชุงุฌ ุงูุตูุฑุฉ ุงููุชููุนุฉุ ุณุชุญุตู ุนูู ุนุฑุถ ููุงุฑู ูุธูุฑ ุงูุตูุฑุฉ ุงูุฃุตููุฉ ูุงููุชูุฌุฉ ุงููุชููุนุฉ ุฌูุจุงู ุฅูู ุฌูุจ. ููููู ุงูุชุจุฏูู ุจูู ุงูุนุฑุถ ุงููููุตู ูุงูุนุฑุถ ุงููุฏูุฌ. ุงุณุชุฎุฏู ูุฐู ุงูููุงุฑูุฉ ูุดุฑุญ ุงููุชุงุฆุฌ ุงููุชููุนุฉ ูููุฑูุถ ุจูุถูุญ. ููููู ุฃูุถุงู ุญูุธ ุงููุชุงุฆุฌ ูู ููู ุงููุฑูุถ ุฃู ุทุจุงุนุชูุง ูููุฑุงุฌุนุฉ ุงููุงุญูุฉ.",
    visual: "๐",
    tips: [
      "ุงุนุฑุถ ุงููุชุงุฆุฌ ุนูู ุดุงุดุฉ ูุจูุฑุฉ ูููุถูุญ",
      "ุงุดุฑุญ ูููุฑูุถ ุฃู ุงููุชุงุฆุฌ ุชูุฏูุฑูุฉ",
      "ุงุญูุธ ุงููุชุงุฆุฌ ูู ููู ุงููุฑูุถ",
      "ูุงูุด ุงูุชููุนุงุช ุงููุงูุนูุฉ ูุน ุงููุฑูุถ"
    ]
  },
  {
    id: "consultation",
    title: "ุฅุฏุงุฑุฉ ุงูุงุณุชุดุงุฑุงุช",
    description: "ููููุฉ ุชูุซูู ุงูุงุณุชุดุงุฑุฉ ูุญูุธ ุงูุจูุงูุงุช",
    duration: 25,
    content: "ูุชุถูู ุงููุธุงู ูููุฐุฌ ุงุณุชุดุงุฑุฉ ุดุงูู ูุชูุซูู ุฌูุณุฉ ุงูุนูู ูุน ุงููุฑูุถ. ุฃุฏุฎู ุจูุงูุงุช ุงููุฑูุถ ุงูุฃุณุงุณูุฉุ ููุน ุงูุฅุฌุฑุงุก ุงูููุชุฑุญุ ุงูููุงุญุธุงุช ุงูุทุจูุฉุ ูุงูุชูุตูุงุช. ูููู ุญูุธ ุฌููุน ุงูุจูุงูุงุช ุจุดูู ุขูู ููุดูุฑ. ูุฐุง ุงูุชูุซูู ููู ูููุชุงุจุนุฉ ุงูุทุจูุฉ ููุถูุงู ุงุณุชูุฑุงุฑูุฉ ุงูุฑุนุงูุฉ ุงูุทุจูุฉ ูููุงู ูููุนุงููุฑ ุงูููููุฉ.",
    visual: "๐",
    tips: [
      "ุฃุฏุฎู ุฌููุน ุงูุจูุงูุงุช ุงููุทููุจุฉ ุจุฏูุฉ",
      "ุงูุชุจ ููุงุญุธุงุช ูุงุถุญุฉ ูููุตูุฉ",
      "ุงุญูุธ ูุณุฎุฉ ุงุญุชูุงุทูุฉ ูู ุงูุชูุฑูุฑ",
      "ุฑุงุฌุน ุงูุจูุงูุงุช ูุจู ุงูุญูุธ ุงูููุงุฆู"
    ]
  },
  {
    id: "best-practices",
    title: "ุฃูุถู ุงูููุงุฑุณุงุช ูุงููุตุงุฆุญ",
    description: "ูุตุงุฆุญ ููุญุตูู ุนูู ุฃูุถู ุงููุชุงุฆุฌ",
    duration: 30,
    content: "ููุญุตูู ุนูู ุฃูุถู ุงููุชุงุฆุฌ ูู ุงูููุตุฉ: ุงุณุชุฎุฏู ุฏุงุฆูุงู ุตูุฑ ุนุงููุฉ ุงูุฌูุฏุฉ ุจุฅุถุงุกุฉ ุฌูุฏุฉุ ูุงูุด ุงูุชููุนุงุช ุงููุงูุนูุฉ ูุน ุงููุฑุถูุ ุงุญูุธ ูุณุฎ ุงุญุชูุงุทูุฉ ูู ุฌููุน ุงููุชุงุฆุฌุ ุญุงูุธ ุนูู ุชุญุฏูุซ ุงููุธุงู ููุญุตูู ุนูู ุฃุญุฏุซ ุงูููุฒุงุชุ ูุงุณุชูุฏ ูู ุงูุฏุนู ุงูููู ุงููุชุงุญ 24/7. ุชุฐูุฑ ุฃู ูุฐู ุงูุฃุฏุงุฉ ูุณุงุนุฏุฉ ููุชุตูุฑ ูููุณุช ุจุฏููุงู ุนู ุงูุฎุจุฑุฉ ุงูุทุจูุฉ ูุงูุชูููู ุงูุดุฎุตู.",
    visual: "โจ",
    tips: [
      "ุงุชุจุน ุงููุนุงููุฑ ุงูุทุจูุฉ ุงูููููุฉ ุฏุงุฆูุงู",
      "ุงุญุชุฑู ุฎุตูุตูุฉ ุงููุฑุถู",
      "ุงุณุชุฎุฏู ุงููุชุงุฆุฌ ูุฃุฏุงุฉ ุชุตูุฑ ููุท",
      "ุงุณุชูุฑ ูู ุงูุชุนูู ูุงูุชุทููุฑ ุงููููู"
    ]
  }
];

export function InteractiveTutorialVideo() {
  const [isPlaying, setIsPlaying] = useState(false);
  const [currentStep, setCurrentStep] = useState(0);
  const [progress, setProgress] = useState(0);
  const [isMuted, setIsMuted] = useState(false);
  const [playbackSpeed, setPlaybackSpeed] = useState(1);
  const [isCompleted, setIsCompleted] = useState(false);
  
  const intervalRef = useRef<NodeJS.Timeout | null>(null);
  const totalDuration = tutorialSteps.reduce((sum, step) => sum + step.duration, 0);

  useEffect(() => {
    if (isPlaying && !isCompleted) {
      intervalRef.current = setInterval(() => {
        setProgress(prev => {
          const newProgress = prev + (playbackSpeed / tutorialSteps[currentStep].duration);
          
          if (newProgress >= 100) {
            if (currentStep < tutorialSteps.length - 1) {
              setCurrentStep(curr => curr + 1);
              return 0;
            } else {
              setIsCompleted(true);
              setIsPlaying(false);
              return 100;
            }
          }
          
          return newProgress;
        });
      }, 1000);
    } else {
      if (intervalRef.current) {
        clearInterval(intervalRef.current);
      }
    }

    return () => {
      if (intervalRef.current) {
        clearInterval(intervalRef.current);
      }
    };
  }, [isPlaying, currentStep, playbackSpeed, isCompleted]);

  const handlePlayPause = () => {
    if (isCompleted) {
      // Reset to beginning
      setCurrentStep(0);
      setProgress(0);
      setIsCompleted(false);
    }
    setIsPlaying(!isPlaying);
  };

  const handleStepChange = (stepIndex: number) => {
    setCurrentStep(stepIndex);
    setProgress(0);
    setIsPlaying(false);
  };

  const handleSkipForward = () => {
    if (currentStep < tutorialSteps.length - 1) {
      setCurrentStep(currentStep + 1);
      setProgress(0);
    }
  };

  const handleSkipBack = () => {
    if (currentStep > 0) {
      setCurrentStep(currentStep - 1);
      setProgress(0);
    }
  };

  const getCurrentStepTime = () => {
    const elapsed = Math.floor((progress / 100) * tutorialSteps[currentStep].duration);
    return `${elapsed}:${(elapsed % 60).toString().padStart(2, '0')}`;
  };

  const getTotalElapsed = () => {
    const previousStepsTime = tutorialSteps.slice(0, currentStep)
      .reduce((sum, step) => sum + step.duration, 0);
    const currentStepTime = (progress / 100) * tutorialSteps[currentStep].duration;
    const total = Math.floor(previousStepsTime + currentStepTime);
    return `${Math.floor(total / 60)}:${(total % 60).toString().padStart(2, '0')}`;
  };

  const currentTutorialStep = tutorialSteps[currentStep];

  return (
    <div className="max-w-4xl mx-auto bg-white rounded-xl shadow-lg overflow-hidden" dir="rtl">
      {/* Video Header */}
      <div className="bg-gradient-to-r from-blue-600 to-purple-600 text-white p-6">
        <div className="flex items-center justify-between">
          <div>
            <h2 className="text-2xl font-bold mb-2">ุฏููู ุงุณุชุฎุฏุงู MedVision AI</h2>
            <p className="text-blue-100">ุดุฑุญ ุชูุตููู ุดุงูู ูุฌููุน ููุฒุงุช ุงูููุตุฉ</p>
          </div>
          <div className="text-center">
            <div className="text-3xl mb-2">{currentTutorialStep.visual}</div>
            <Badge variant="secondary" className="text-xs">
              ุงูุฎุทูุฉ {currentStep + 1} ูู {tutorialSteps.length}
            </Badge>
          </div>
        </div>
      </div>

      {/* Video Content Area */}
      <div className="p-6">
        <div className="bg-slate-900 rounded-lg mb-6 relative overflow-hidden" style={{ minHeight: '300px' }}>
          {/* Video Simulation */}
          <div className="absolute inset-0 flex items-center justify-center">
            <div className="text-center">
              <div className="text-6xl mb-4">{currentTutorialStep.visual}</div>
              <h3 className="text-white text-xl font-bold mb-2">{currentTutorialStep.title}</h3>
              <p className="text-gray-300 text-sm max-w-md">{currentTutorialStep.description}</p>
            </div>
          </div>

          {/* Play/Pause Overlay */}
          {!isPlaying && !isCompleted && (
            <div className="absolute inset-0 flex items-center justify-center bg-black bg-opacity-50">
              <Button
                onClick={handlePlayPause}
                className="bg-blue-600 hover:bg-blue-700 rounded-full p-4"
                size="lg"
              >
                <PlayCircle className="w-8 h-8" />
              </Button>
            </div>
          )}

          {/* Completion Overlay */}
          {isCompleted && (
            <div className="absolute inset-0 flex items-center justify-center bg-black bg-opacity-50">
              <div className="text-center">
                <CheckCircle className="w-16 h-16 text-green-500 mx-auto mb-4" />
                <h3 className="text-white text-xl font-bold mb-4">ุชู ุฅููุงู ุงูุฏูุฑุฉ ุงูุชุฏุฑูุจูุฉ!</h3>
                <Button
                  onClick={handlePlayPause}
                  className="bg-blue-600 hover:bg-blue-700"
                >
                  <RotateCcw className="w-4 h-4 mr-2" />
                  ุฅุนุงุฏุฉ ุชุดุบูู
                </Button>
              </div>
            </div>
          )}

          {/* Progress Bar */}
          <div className="absolute bottom-0 left-0 right-0 p-4">
            <Progress value={progress} className="h-2 bg-gray-800" />
          </div>

          {/* Time Display */}
          <div className="absolute top-4 right-4 bg-black bg-opacity-50 text-white px-2 py-1 rounded text-sm">
            {getTotalElapsed()} / {Math.floor(totalDuration / 60)}:{(totalDuration % 60).toString().padStart(2, '0')}
          </div>
        </div>

        {/* Controls */}
        <div className="flex items-center justify-between mb-6">
          <div className="flex items-center gap-2">
            <Button
              variant="outline"
              size="sm"
              onClick={handleSkipBack}
              disabled={currentStep === 0}
            >
              <SkipBack className="w-4 h-4" />
            </Button>
            
            <Button
              onClick={handlePlayPause}
              className="bg-blue-600 hover:bg-blue-700 text-white"
            >
              {isPlaying ? <Pause className="w-4 h-4" /> : <Play className="w-4 h-4" />}
            </Button>
            
            <Button
              variant="outline"
              size="sm"
              onClick={handleSkipForward}
              disabled={currentStep === tutorialSteps.length - 1}
            >
              <SkipForward className="w-4 h-4" />
            </Button>

            <Button
              variant="outline"
              size="sm"
              onClick={() => setIsMuted(!isMuted)}
            >
              {isMuted ? <VolumeX className="w-4 h-4" /> : <Volume2 className="w-4 h-4" />}
            </Button>

            <select 
              value={playbackSpeed} 
              onChange={(e) => setPlaybackSpeed(Number(e.target.value))}
              className="px-2 py-1 border rounded text-sm"
            >
              <option value={0.5}>0.5x</option>
              <option value={1}>1x</option>
              <option value={1.5}>1.5x</option>
              <option value={2}>2x</option>
            </select>
          </div>

          <div className="flex items-center gap-2">
            <Button variant="outline" size="sm">
              <Settings className="w-4 h-4" />
            </Button>
            <Button variant="outline" size="sm">
              <Download className="w-4 h-4" />
            </Button>
          </div>
        </div>

        {/* Current Step Content */}
        <Card className="mb-6">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <BookOpen className="w-5 h-5" />
              {currentTutorialStep.title}
            </CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-gray-700 leading-relaxed mb-4">
              {currentTutorialStep.content}
            </p>
            
            {currentTutorialStep.tips.length > 0 && (
              <div>
                <h4 className="font-medium text-gray-900 mb-2">ูุตุงุฆุญ ูููุฉ:</h4>
                <ul className="space-y-1">
                  {currentTutorialStep.tips.map((tip, index) => (
                    <li key={index} className="flex items-start gap-2 text-sm text-gray-600">
                      <ArrowRight className="w-4 h-4 text-blue-500 mt-0.5 flex-shrink-0" />
                      {tip}
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </CardContent>
        </Card>

        {/* Step Navigation */}
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2">
          {tutorialSteps.map((step, index) => (
            <Button
              key={step.id}
              variant={currentStep === index ? "default" : "outline"}
              size="sm"
              onClick={() => handleStepChange(index)}
              className="justify-start text-xs h-auto p-2"
            >
              <div className="text-left">
                <div className="font-medium truncate">{step.title}</div>
                <div className="text-xs opacity-70">{step.duration}ุซ</div>
              </div>
            </Button>
          ))}
        </div>
      </div>
    </div>
  );
}